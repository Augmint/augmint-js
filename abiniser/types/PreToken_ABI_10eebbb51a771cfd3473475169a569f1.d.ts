/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractOptions, Options } from "web3-eth-contract";
import { Block } from "web3-eth";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import { Callback, TransactionObject } from "./types";

export class PreToken_ABI_10eebbb51a771cfd3473475169a569f1 extends Contract {
    constructor(jsonInterface: any[], address?: string, options?: ContractOptions);
    methods: {
        allAgreements(arg0: number | string): TransactionObject<string>;

        agreementOwners(arg0: string): TransactionObject<string>;

        permissions(arg0: string, arg1: string | number[]): TransactionObject<boolean>;

        agreements(
            arg0: string | number[]
        ): TransactionObject<{
            owner: string;
            balance: string;
            discount: string;
            valuationCap: string;
            0: string;
            1: string;
            2: string;
            3: string;
        }>;

        balanceOf(owner: string): TransactionObject<string>;

        getAllAgreements(offset: number | string): TransactionObject<((string)[])[]>;

        revokePermission(agent: string, requiredPermission: string | number[]): TransactionObject<void>;

        revokeMultiplePermissions(agent: string, requiredPermissions: (string | number[])[]): TransactionObject<void>;

        grantMultiplePermissions(agent: string, requiredPermissions: (string | number[])[]): TransactionObject<void>;

        grantPermission(agent: string, requiredPermission: string | number[]): TransactionObject<void>;

        addAgreement(
            owner: string,
            agreementHash: string | number[],
            discount: number | string,
            valuationCap: number | string
        ): TransactionObject<void>;

        issueTo(agreementHash: string | number[], amount: number | string): TransactionObject<void>;

        burnFrom(agreementHash: string | number[], amount: number | string): TransactionObject<boolean>;

        transfer(to: string, amount: number | string): TransactionObject<boolean>;

        transferAgreement(agreementHash: string | number[], to: string): TransactionObject<boolean>;

        name(): TransactionObject<string>;
        totalSupply(): TransactionObject<string>;
        decimals(): TransactionObject<string>;
        symbol(): TransactionObject<string>;
        CHUNK_SIZE(): TransactionObject<string>;
        getAgreementsCount(): TransactionObject<string>;
    };
    events: {
        Transfer(
            options?: {
                filter?: object;
                fromBlock?: number | string;
                topics?: (null | string)[];
            },
            cb?: Callback<EventLog>
        ): EventEmitter;

        NewAgreement(
            options?: {
                filter?: object;
                fromBlock?: number | string;
                topics?: (null | string)[];
            },
            cb?: Callback<EventLog>
        ): EventEmitter;

        PermissionGranted(
            options?: {
                filter?: object;
                fromBlock?: number | string;
                topics?: (null | string)[];
            },
            cb?: Callback<EventLog>
        ): EventEmitter;

        PermissionRevoked(
            options?: {
                filter?: object;
                fromBlock?: number | string;
                topics?: (null | string)[];
            },
            cb?: Callback<EventLog>
        ): EventEmitter;

        allEvents: (
            options?: {
                filter?: object;
                fromBlock?: number | string;
                topics?: (null | string)[];
            },
            cb?: Callback<EventLog>
        ) => EventEmitter;
    };
}
