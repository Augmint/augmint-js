/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractOptions, Options } from "web3-eth-contract";
import { Block } from "web3-eth";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import { Callback, TransactionObject } from "./types";

export class Rates_ABI_73a17ebb0acc71773371c6a8e1c8e6ce extends Contract {
    constructor(jsonInterface: any[], address?: string, options?: ContractOptions);
    methods: {
        permissions(arg0: string, arg1: string | number[]): TransactionObject<boolean>;

        rates(
            arg0: string | number[]
        ): TransactionObject<{
            rate: string;
            lastUpdated: string;
            0: string;
            1: string;
        }>;

        convertFromWei(bSymbol: string | number[], weiValue: number | string): TransactionObject<string>;

        convertToWei(bSymbol: string | number[], value: number | string): TransactionObject<string>;

        revokePermission(agent: string, requiredPermission: string | number[]): TransactionObject<void>;

        revokeMultiplePermissions(agent: string, requiredPermissions: (string | number[])[]): TransactionObject<void>;

        grantMultiplePermissions(agent: string, requiredPermissions: (string | number[])[]): TransactionObject<void>;

        grantPermission(agent: string, requiredPermission: string | number[]): TransactionObject<void>;

        setRate(symbol: string | number[], newRate: number | string): TransactionObject<void>;

        setMultipleRates(symbols: (string | number[])[], newRates: (number | string)[]): TransactionObject<void>;
    };
    events: {
        RateChanged(
            options?: {
                filter?: object;
                fromBlock?: number | string;
                topics?: (null | string)[];
            },
            cb?: Callback<EventLog>
        ): EventEmitter;

        PermissionGranted(
            options?: {
                filter?: object;
                fromBlock?: number | string;
                topics?: (null | string)[];
            },
            cb?: Callback<EventLog>
        ): EventEmitter;

        PermissionRevoked(
            options?: {
                filter?: object;
                fromBlock?: number | string;
                topics?: (null | string)[];
            },
            cb?: Callback<EventLog>
        ): EventEmitter;

        allEvents: (
            options?: {
                filter?: object;
                fromBlock?: number | string;
                topics?: (null | string)[];
            },
            cb?: Callback<EventLog>
        ) => EventEmitter;
    };
}
