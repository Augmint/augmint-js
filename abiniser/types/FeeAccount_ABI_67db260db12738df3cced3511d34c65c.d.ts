/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractOptions, Options } from "web3-eth-contract";
import { Block } from "web3-eth";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import { Callback, TransactionObject } from "./types";

export class FeeAccount_ABI_67db260db12738df3cced3511d34c65c extends Contract {
    constructor(jsonInterface: any[], address?: string, options?: ContractOptions);
    methods: {
        permissions(arg0: string, arg1: string | number[]): TransactionObject<boolean>;

        transferFee(): TransactionObject<{
            pt: string;
            min: string;
            max: string;
            0: string;
            1: string;
            2: string;
        }>;

        calculateTransferFee(from: string, to: string, amount: number | string): TransactionObject<string>;

        calculateExchangeFee(weiAmount: number | string): TransactionObject<string>;

        revokePermission(agent: string, requiredPermission: string | number[]): TransactionObject<void>;

        revokeMultiplePermissions(agent: string, requiredPermissions: (string | number[])[]): TransactionObject<void>;

        grantMultiplePermissions(agent: string, requiredPermissions: (string | number[])[]): TransactionObject<void>;

        withdraw(
            tokenAddress: string,
            to: string,
            tokenAmount: number | string,
            weiAmount: number | string,
            narrative: string
        ): TransactionObject<void>;

        grantPermission(agent: string, requiredPermission: string | number[]): TransactionObject<void>;

        setTransferFees(
            transferFeePt: number | string,
            transferFeeMin: number | string,
            transferFeeMax: number | string
        ): TransactionObject<void>;
    };
    events: {
        TransferFeesChanged(
            options?: {
                filter?: object;
                fromBlock?: number | string;
                topics?: (null | string)[];
            },
            cb?: Callback<EventLog>
        ): EventEmitter;

        WithdrawFromSystemAccount(
            options?: {
                filter?: object;
                fromBlock?: number | string;
                topics?: (null | string)[];
            },
            cb?: Callback<EventLog>
        ): EventEmitter;

        PermissionGranted(
            options?: {
                filter?: object;
                fromBlock?: number | string;
                topics?: (null | string)[];
            },
            cb?: Callback<EventLog>
        ): EventEmitter;

        PermissionRevoked(
            options?: {
                filter?: object;
                fromBlock?: number | string;
                topics?: (null | string)[];
            },
            cb?: Callback<EventLog>
        ): EventEmitter;

        allEvents: (
            options?: {
                filter?: object;
                fromBlock?: number | string;
                topics?: (null | string)[];
            },
            cb?: Callback<EventLog>
        ) => EventEmitter;
    };
}
